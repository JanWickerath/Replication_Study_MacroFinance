#! python


def build(ctx):

    def out_analysis(*args):
        "Just a simple wrapper for quick access"
        return ctx.path_to(ctx, 'OUT_ANALYSIS', *args)

    ctx(
        features='run_m_script',
        source='shock_construction.m',
        target=out_analysis('shock_innovations.mat'),
        deps=[
            ctx.path_to(ctx, 'OUT_DATA', 'dataset.mat'),
            ctx.path_to(ctx, 'OUT_DATA', 'parameters.mat')
        ],
        name='shock_construction.m'
    )

    for model in 'baseline','extended':
        # set target and dependency specific to model
        if model == 'baseline':
            deps = []
            target = [
                ctx.path_to(
                    ctx, 'OUT_ANALYSIS', '{}_model_results.mat'.format(model)
                )
            ]
        else:
            deps = ctx.path_to(
                ctx, 'OUT_DATA', 'estimation_data.mat'
            )
            target = [
                ctx.path_to(
                    ctx, 'OUT_ANALYSIS', '{}_model_results.mat'.format(model)
                ),
                ctx.path_to(
                    ctx, 'OUT_FIGURES', 'TracePlot_SE_eps_z.eps'
                ),
                ctx.path_to(
                    ctx, 'OUT_FIGURES', 'TracePlot_SE_eps_xi.eps'
                ),
                ctx.path_to(
                    ctx, 'OUT_FIGURES', 'MH_Autocorrelation_SE_eps_z.eps'
                ),
                ctx.path_to(
                    ctx, 'OUT_FIGURES', 'MH_Autocorrelation_SE_eps_xi.eps'
                )
            ]

        ctx(
            features='run_m_script',
            source=ctx.path_to(
                ctx, 'DYNARE_FILES', 'run_{}_model.m'.format(model)
            ),
            target = ctx.path_to(
                ctx, 'OUT_ANALYSIS', '{}_model_results.mat'.format(model)
            ),
            deps=deps,
            name='run_{}_model'.format(model)
        )

    ctx(
        features='run_m_script',
        source='baseline_simulation.m',
        target=out_analysis('baseline_simulation.mat'),
        deps=[
            out_analysis('baseline_model_results.mat'),
            out_analysis('shock_innovations.mat')
        ],
        name='baseline_simulation'
    )

    # Illustrate use of run_m_script with automatic model specification.
    # for model in 'baseline', 'max_moves_2':
    #     source = 'schelling'
    #     ctx(
    #         features='run_m_script',
    #         source='{}.m'.format(source),
    #         target=[
    #             out_analysis('{}_{}.mat'.format(source, model)),
    #         ],
    #         deps=[
    #             ctx.path_to(ctx, 'IN_MODEL_SPECS', '{}.json'.format(model)),
    #             ctx.path_to(ctx, 'IN_MODEL_CODE', 'move_until_happy.m'),
    #             ctx.path_to(ctx, 'OUT_DATA', 'sample.mat'),
    #         ],
    #         append="('{}')".format(model),
    #         name='{}_{}'.format(source, model)
    #     )
